<?php
/**
 * @file
 * Functions to support theming
 */

use Drupal\Component\Utility\SafeMarkup;
use Drupal\Component\Utility\Xss;
use Drupal\Core\Template\Attribute;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\StringTranslation\PluralTranslatableMarkup;
use Drupal\Core\Url;
use Drupal\Core\Link;
use Drupal\node\NodeInterface;


/**
 * Implements hook_preprocess_HOOK() for HTML document templates.
 */
function scitalk_theme_preprocess_html(&$variables) {

}

/**
 * Implements hook_preprocess_HOOK() for region document templates.
 */
function scitalk_theme_preprocess_page_title(&$variables) {

  // Get the page header view mode for nodes and taxonomy terms where needed.
  // Get the route to find out what type of page this is
  $route = \Drupal::routeMatch()->getRouteName();
  $route_array = explode('.', $route);
  // dsm($route_array);

  // For talks and speakers
  if ($route_array[1] == 'node') {
    // If the node object exists:
    if ($route_array[2] == 'canonical') {
      $node = \Drupal::routeMatch()->getParameter('node');
    } else if ($route_array[2] == 'preview') {
      $node = \Drupal::routeMatch()->getParameter('node_preview');
    }
    if (isset($node) && (($node->getType() == 'talk') || ($node->getType() == 'speaker_profile'))) {
      $variables['page_header'] = render(\Drupal::entityTypeManager()->getViewBuilder('node')->view($node, 'page_header'));
    }
  }
  // For taxonomy terms
}

/**
 * Implements hook_preprocess_HOOK().
 * Alters variables for nodes.
 */
function scitalk_theme_preprocess_node(&$variables) {
   $node = $variables['node'];
}

/*
 Implements hook_form_alter()
 */
function scitalk_theme_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {

}
